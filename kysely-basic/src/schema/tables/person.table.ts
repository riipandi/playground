import { Generated, ColumnType } from 'kysely'

export interface PersonTable {
    // Columns that are generated by the database should be marked
    // using the `Generated` type. This way they are automatically
    // made optional in inserts and updates.
    id: Generated<number>
    first_name: string
    // If the column is nullable in the database, make its type nullable.
    // Don't use optional properties. Optionality is always determined
    // automatically by Kysely.
    last_name: string | null
    gender: 'male' | 'female' | 'other'
    // You can specify a different type for each operation (select, insert and
    // update) using the `ColumnType<SelectType, InsertType, UpdateType>`
    // wrapper. Here we define a column `updated_at` that is selected as
    // a `Date`, can optionally be provided as a `string` in inserts and
    // can never be updated:
    created_at: ColumnType<Date, string | undefined, never>
    updated_at: ColumnType<Date, string | undefined, never>
}
